1.git init
	--This is the first command to initialize an empty git repository in our local space.
2.git add .
	--This command will add the contents of the current directory to the staging area which is a temporary or intermediate space between our local repo and remote repo.
3.git commit -m "some message"
	--This command will commit the changes to our local repo.Means,It will move contents from the staging area to our local repo.
4.git status
	--This command will print the status of the current repository.
5.git log
	--This command will print the commit history of the current repo.(Who commited,When commited,The commit message etc)
6.git config --global user.name "user_name(don't need these quotes)"
	--This command will set the user_name.It is used in git log to display who committed it.
7.git config --global user.email "user_email(don't need these quotes)"
	--This command will set the user_email.It is used in git log to display who committed it.It will be useful if anyone wants to communicate with you.
8.git restore --staged <file_name(don't need these angular brackets)>
	--This command will be used to remove a file from the staging area.i.e, that file is added to staging area but still not committed yet.
9.git restore <file_name>
	--This command will discard the updates that had been made in the current directory.Which means the file in the working directory got updated but that file is not added or committed to the local repo.In that case,if we want to discard the changes in those files and want them as it were in the local repo.
10.git rm --cache <file_name>
	--This command will delete the file from the local repo.But it will present in the staging area.In order to remove it from the staging are too,we need to commit it.
11.git clone <url_of_your_online/remote_repo>
	--This command will create a local copy of a remote repository.
12.git add -A
	--This command will add all new and changed files to the staging area.
13.git rm -r <file/folder_name>
	--This command will remove a file or folder.
14.git branch <branch_name>
	--This command will create a branch with that "branch_name" in our local repo.
15.git pull <clone_url_from_github_repo>
	--This command will copy the contents of the remote repo to our local repo.
16.git branch -a
	--This command will list all branches(local and repo)
17.git branch -D <branch_name>
	--This command will delete a branch from the local repo even it is not merged.
18.git branch -d <branch_name>
	--This command will delete a branch from the local repo only if it is merged.
19.git push -u <remote_repo_name> <branch_name>
	--This command will copy the contents from the local repo to the remote repo.
20.git push <remote_repo_name> --delete <branch_name>
	--This command will be used to delete a remote branch.
21.Steps to remove a directory from remote repo
	--First remove that directory in the local repo using 'git rm -r <file/folder_name>'
	--Then commit those changes in the local repo using 'git commit'
	--Then we have to push this local repo to the remote repo using 'git push -u <remote_repo_name> <local_repo_branch_name>'
22.git checkout -b <branch_name>
	--This command creates a new branch and switch to that branch
23.git checkout -b <branch_name> <remote_repo/remote_branch_name>
	--This command will clone a remote branch and switch to it.
24.git branch -m <old_branch_name> <new_branch_name>
	--This command is used to rename the branch in local_repo.
25.git checkout <branch_name>
	--This command is used to switch to an existing branch.
26.git checkout -
	--This command will be used to switch to the branch that is last checked out.
27.git merge <branch_name>
	--This command will merge a branch in to the active branch.
28.git merge <source_branch_name> <target_branch_name>
	--This command will merge a branch in to a target branch.
29.git stash(or git stash push)
30.git stash list
31.git stash apply
32.git stash apply stash@{3}(means apply 3rd stash)
33.git stash apply --index
34.git stash clear
35.git fetch